<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 映射配置文件 -->
<mapper namespace="com.lee.dao.StudentMapper"> <!-- namespace属性取值必须为dao接口的全限定类名 -->
    <!-- 结果映射 -->
    <resultMap id="student" type="student">
        <id property="id" column="id"/>
        <result property="sno" column="sno"/>
        <result property="name" column="name"/>
        <result property="gender" column="gender"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="telephone" column="telephone"/>
        <result property="address" column="address"/>
        <result property="introduction" column="introduction"/>
        <result property="portraitPath" column="portrait_path"/>
        <result property="clazzName" column="clazz_name"/>
    </resultMap>
    
    <!-- 验证登录信息是否正确 -->
    <select id="login" parameterType="loginForm" resultMap="student">
        SELECT * FROM tb_student WHERE name=#{username} AND password=#{password}
    </select>

    <!-- 根据班级与学生名获取指定/全部学生信息列表 -->
    <select id="selectList" parameterType="student" resultMap="student" >
        SELECT * FROM tb_student
        <where>
            <if test="clazzName!=null and clazzName!=''">
                AND clazz_name=#{clazzName}
            </if>
            <if test="name!=null and name!=''">
                AND name LIKE concat(concat('%', #{name}), '%')
            </if>
        </where>
    </select>

    <!-- 根据学号查询指定学生信息 -->
    <select id="findBySno" parameterType="String" resultMap="student">
        SELECT * FROM tb_student WHERE sno=#{sno}
    </select>

    <!-- 添加学生信息 -->
    <insert id="insert" parameterType="student">
        INSERT INTO tb_student(sno, name, gender, password, email, telephone, address, introduction, portrait_path, clazz_name)
        VALUES (#{sno}, #{name}, #{gender}, #{password}, #{email}, #{telephone}, #{address}, #{introduction}, #{portraitPath}, #{clazzName})
    </insert>

    <!-- 根据id修改指定学生信息 -->
    <update id="update" parameterType="student">
        UPDATE tb_student
        <set>
            <if test="name!=null and name!=''">name=#{name}, </if>
            <if test="gender!=null and gender!=''">gender=#{gender}, </if>
            <if test="password!=null and password!=''">password=#{password}, </if>
            <if test="email!=null and email!=''">email=#{email}, </if>
            <if test="telephone!=null and telephone!=''">telephone=#{telephone}, </if>
            <if test="address!=null and address!=''">address=#{address}, </if>
            <if test="introduction!=null and introduction!=''">introduction=#{introduction}, </if>
            <if test="portraitPath!=null and portraitPath!=''">portrait_path=#{portraitPath}, </if>
            <if test="clazzName!=null and clazzName!=''">clazz_name=#{clazzName}, </if>
        </set>
        WHERE id=#{id}
    </update>

    <!-- 根据id修改指定学生密码 -->
    <update id="updatePassword" parameterType="student">
        UPDATE tb_student SET password=#{password} WHERE id=#{id}
    </update>

    <!-- 根据id批量删除指定学生信息 -->
    <delete id="deleteById">
        DELETE FROM tb_student WHERE id IN
        <foreach collection="array" item="ids" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </delete>
</mapper>